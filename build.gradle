plugins {
	id 'org.springframework.boot' version '3.1.4'
}


allprojects {
	group = 'br.com.junior.software.architect'
	version = '0.0.1-SNAPSHOT'
}



subprojects {

	repositories {
		mavenCentral()
	}

	configurations.all {
		resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
	}

	if (name.endsWith("controller")){
		apply plugin: 'org.springframework.boot'
		apply plugin: 'java'
	} else {
		apply plugin: 'java-library'
		jar.enabled = true
	}

	java {
		sourceCompatibility = '17'
	}

	dependencies {
		implementation 'org.projectlombok:lombok:1.18.30'
		annotationProcessor 'org.projectlombok:lombok:1.18.30'
	}

}

project(':entity') {
	dependencies {
		api 'org.springframework.boot:spring-boot-starter-data-jpa:3.1.4'
		api ("com.github.dozermapper:dozer-core:6.5.2")
	}
}


project(':domain') {
	dependencies {
		api 'com.h2database:h2:2.2.224'
		api project(':entity')
		api 'org.apache.poi:poi:3.12'
		api 'org.apache.poi:poi-ooxml:3.12'
	}
}

project(':controller') {

	dependencies {
		implementation project(':domain')
		implementation 'org.springframework.boot:spring-boot-starter-web:3.1.4'
		testImplementation 'org.springframework.boot:spring-boot-starter-test:3.1.4'
		implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
		implementation 'org.liquibase:liquibase-core:4.23.2'
	}

	springBoot {
		buildInfo()
	}

	test {
		useJUnitPlatform()
	}

	tasks.named('test') {
		useJUnitPlatform()
	}



	bootJar {
		archiveBaseName.set(project.name)
		version = project.version
		launchScript()

		manifest { attributes('Implementation-Version': archiveVersion) }

		if (project.hasProperty("archiveName")) {
			archiveFileName.set(project.properties["archiveName"] as String)
		}
	}
	compileJava.dependsOn bootBuildInfo
	build.dependsOn  bootBuildInfo
}